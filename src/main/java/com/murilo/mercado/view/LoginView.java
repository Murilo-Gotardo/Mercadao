/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.murilo.mercado.view;

import com.formdev.flatlaf.FlatDarkLaf;
import com.murilo.mercado.model.ClienteModel;
import com.murilo.mercado.controller.CadastroProdutoController;
import com.murilo.mercado.controller.LoginController;
import com.murilo.mercado.controller.MercadoController;

/**
 *
 * @author murilo
 */
public class LoginView extends javax.swing.JFrame {

    private final CadastroProdutoController cadastroProdutoController = new CadastroProdutoController();
    private final MercadoController mercadoController = new MercadoController();
    private final LoginController loginController = new LoginController();

    /**
     * Creates new form NewJFrame
     */
    public LoginView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        isAdmin = new javax.swing.JCheckBox();
        nomeCliente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loginBTN = new javax.swing.JButton();
        textRequirements = new javax.swing.JLabel();
        cpfCliente = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setBounds(new java.awt.Rectangle(500, 500, 500, 500));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("JetBrains Mono", 0, 10)); // NOI18N
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(300, 300));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0};
        layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        getContentPane().setLayout(layout);

        isAdmin.setText("Sou Admin");
        isAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isAdminActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        getContentPane().add(isAdmin, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 50;
        getContentPane().add(nomeCliente, gridBagConstraints);

        jLabel1.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("CPF");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        loginBTN.setText("Entrar");
        loginBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBTNActionPerformed(evt);
            }
        });
        loginBTN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginBTNKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(loginBTN, gridBagConstraints);

        textRequirements.setForeground(new java.awt.Color(204, 51, 0));
        textRequirements.setFocusable(false);
        textRequirements.setVisible(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 0, 0);
        getContentPane().add(textRequirements, gridBagConstraints);

        try {
            cpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 50;
        getContentPane().add(cpfCliente, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void isAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isAdminActionPerformed

    private void loginBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBTNActionPerformed
        // TODO add your handling code here:
        if (!nomeCliente.getText().isEmpty() && !cpfCliente.getText().isEmpty()) {
            if (loginController.login(nomeCliente.getText(), cpfCliente.getText(), isAdmin.isSelected(), textRequirements)) {
                if (isAdmin.isSelected()) {
                    cadastroProdutoController.createView();
                } else {
                    ClienteModel cliente = mercadoController.getLastCliente(cpfCliente.getText());
                    mercadoController.createView(cliente);
                }
                loginController.logout(this);
            }
        } else {
            textRequirements.setText("*Preencha todos os campos");
            textRequirements.setVisible(true);
        }
    }//GEN-LAST:event_loginBTNActionPerformed

    private void loginBTNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginBTNKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginBTNKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatDarkLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new LoginView().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField cpfCliente;
    private javax.swing.JCheckBox isAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton loginBTN;
    private javax.swing.JTextField nomeCliente;
    private javax.swing.JLabel textRequirements;
    // End of variables declaration//GEN-END:variables
}
