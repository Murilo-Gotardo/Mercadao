/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.murilo.mercado.view;

import com.murilo.mercado.model.MercadoModel;
import com.murilo.mercado.model.ProdutoModel;
import com.murilo.mercado.model.controller.CadastroProdutoController;
import com.murilo.mercado.model.controller.LoginController;
import com.murilo.mercado.model.controller.MercadoController;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author murilo
 */
public class CadastroProdutoView extends javax.swing.JFrame {

    private CadastroProdutoController cadastroProdutoController = new CadastroProdutoController();
    
    /**
     * Creates new form CadastroProdutos
     */
    public CadastroProdutoView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup = new javax.swing.ButtonGroup();
        name = new javax.swing.JTextField();
        description = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        produtosTable = new javax.swing.JTable();
        salvarBTN = new javax.swing.JButton();
        removerBTN = new javax.swing.JButton();
        logoutBTN = new javax.swing.JButton();
        weigth = new javax.swing.JFormattedTextField();
        value = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de produtos");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(750, 650));
        java.awt.GridBagLayout layout1 = new java.awt.GridBagLayout();
        layout1.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        layout1.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        getContentPane().setLayout(layout1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        getContentPane().add(name, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        getContentPane().add(description, gridBagConstraints);

        jLabel1.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 1);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Descrição");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 1);
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Peso");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 1);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Valor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 1);
        getContentPane().add(jLabel4, gridBagConstraints);

        produtosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Descricao", "Peso", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        produtosTable.setColumnSelectionAllowed(true);
        produtosTable.getTableHeader().setReorderingAllowed(false);
        produtosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                produtosTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(produtosTable);
        produtosTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        DefaultTableModel model = (DefaultTableModel) produtosTable.getModel();
        if (com.murilo.mercado.model.MercadoModel.getProdutos().isEmpty()) {
            for (com.murilo.mercado.model.ProdutoModel produto : com.murilo.mercado.model.MercadoModel.getProdutos()) {
                Object[] row = {
                    produto.getId(),
                    produto.getNome(),
                    produto.getDescricao(),
                    produto.getPeso(),
                    produto.getValor()
                };
                model.addRow(row);
            }
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 15;
        gridBagConstraints.gridheight = 33;
        getContentPane().add(jScrollPane1, gridBagConstraints);

        salvarBTN.setText("Salvar");
        salvarBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarBTNActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 36;
        getContentPane().add(salvarBTN, gridBagConstraints);

        removerBTN.setText("Remover");
        removerBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerBTNActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 36;
        getContentPane().add(removerBTN, gridBagConstraints);

        logoutBTN.setText("Sair");
        logoutBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBTNActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 18;
        gridBagConstraints.gridy = 36;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        getContentPane().add(logoutBTN, gridBagConstraints);

        weigth.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        getContentPane().add(weigth, gridBagConstraints);

        value.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 28;
        getContentPane().add(value, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salvarBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarBTNActionPerformed
        // TODO add your handling code here:

        ProdutoModel produto = new ProdutoModel(name.getText(), description.getText(), ((Number) weigth.getValue()).doubleValue(), ((Number) value.getValue()).doubleValue());

        DefaultTableModel tableModel = (DefaultTableModel) produtosTable.getModel();

        Object[] prodData = {produto.getId(), produto.getNome(), produto.getDescricao(), produto.getPeso(), produto.getValor()};

        tableModel.addRow(prodData);
        
        MercadoModel.getProdutos().add(produto);

        name.setText("");
        description.setText("");
        weigth.setText("");
        value.setText("");
    }//GEN-LAST:event_salvarBTNActionPerformed

    private void produtosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_produtosTableMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_produtosTableMouseClicked

    private void removerBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerBTNActionPerformed
        // TODO add your handling code here:

        DefaultTableModel tableModel = (DefaultTableModel) produtosTable.getModel();

        int selectedRow = produtosTable.getSelectedRow();
        if (selectedRow != -1) {
            Object selectedId = produtosTable.getValueAt(selectedRow, 0);
            MercadoModel.getProdutos().removeIf(produto -> selectedId.equals(produto.getId()));
        }

        tableModel.removeRow(produtosTable.getSelectedRow());
        tableModel.fireTableCellUpdated(produtosTable.getSelectedRow(), produtosTable.getSelectedColumn());
    }//GEN-LAST:event_removerBTNActionPerformed

    private void logoutBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBTNActionPerformed
        // TODO add your handling code here
        this.setVisible(false);
        new LoginView().setVisible(true);
    }//GEN-LAST:event_logoutBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CadastroProdutoView().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JTextField description;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutBTN;
    private javax.swing.JTextField name;
    private javax.swing.JTable produtosTable;
    private javax.swing.JButton removerBTN;
    private javax.swing.JButton salvarBTN;
    private javax.swing.JFormattedTextField value;
    private javax.swing.JFormattedTextField weigth;
    // End of variables declaration//GEN-END:variables
}
