/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.murilo.mercado;

import com.formdev.flatlaf.FlatDarkLaf;
import com.murilo.mercado.beans.Cliente;
import com.murilo.mercado.beans.Mercado;
import com.murilo.mercado.beans.Produto;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author murilo
 */
public class Compra extends javax.swing.JFrame {

    private List<Produto> produtosCarrinho = new ArrayList<>();

    public Compra() {
    }

    /**
     * Creates new form Compra
     *
     * @param cliente
     */
    public Compra(Cliente cliente) {
        setCliente(cliente);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        produtos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        produtosTable = new javax.swing.JTable();
        adicionaAoCarrinhoBTN = new javax.swing.JButton();
        carrinho = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        carrinhoTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(100, 100));

        produtos.setLayout(new java.awt.GridBagLayout());

        produtosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "Descricao", "Peso", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        produtosTable.setColumnSelectionAllowed(true);
        produtosTable.getTableHeader().setReorderingAllowed(false);
        produtosTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                produtosTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(produtosTable);
        produtosTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        produtosTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        DefaultTableModel model = (DefaultTableModel) produtosTable.getModel();
        if (!Mercado.getProdutos().isEmpty()) {
            for (Produto produto : Mercado.getProdutos()) {
                Object[] row = {
                    produto.getId(),
                    produto.getNome(),
                    produto.getDescricao(),
                    produto.getPeso(),
                    produto.getValor()
                };
                model.addRow(row);
            }
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        produtos.add(jScrollPane1, gridBagConstraints);

        adicionaAoCarrinhoBTN.setText("Adicionar ao carrinho");
        adicionaAoCarrinhoBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionaAoCarrinhoBTNActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        produtos.add(adicionaAoCarrinhoBTN, gridBagConstraints);

        jTabbedPane1.addTab("Produtos", produtos);

        carrinho.setLayout(new java.awt.GridBagLayout());

        carrinhoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        carrinhoTable.setColumnSelectionAllowed(true);
        carrinhoTable.setMaximumSize(new java.awt.Dimension(500, 0));
        carrinhoTable.getTableHeader().setReorderingAllowed(false);
        carrinhoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carrinhoTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(carrinhoTable);
        carrinhoTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 434;
        gridBagConstraints.ipady = 405;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 14, 0);
        carrinho.add(jScrollPane2, gridBagConstraints);

        jButton1.setText("Finalizar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        carrinho.add(jButton1, gridBagConstraints);

        jTabbedPane1.addTab("Carrinho", carrinho);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 6;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void produtosTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_produtosTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_produtosTableMouseClicked

    private void adicionaAoCarrinhoBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionaAoCarrinhoBTNActionPerformed
        // TODO add your handling code here:

        DefaultTableModel tableModel = (DefaultTableModel) produtosTable.getModel();

        // Criando uma lista para armazenar os dados da linha selecionada
        List<Object> rowData = new ArrayList<>();

       
        Object nome = produtosTable.getValueAt(produtosTable.getSelectedRow(), 1);
        Object valor = produtosTable.getValueAt(produtosTable.getSelectedRow(), produtosTable.getColumnCount() - 1);
        rowData.add(nome);
        rowData.add(valor);


        // Adicionando a lista como uma nova linha na tabela de destino
        DefaultTableModel carrinhoTableModel = (DefaultTableModel) carrinhoTable.getModel();
        carrinhoTableModel.addRow(rowData.toArray());


    }//GEN-LAST:event_adicionaAoCarrinhoBTNActionPerformed

    private void carrinhoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carrinhoTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_carrinhoTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatDarkLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Compra().setVisible(true);
        });
    }

    private Cliente cliente;

    public Cliente getCliente() {
        return cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionaAoCarrinhoBTN;
    private javax.swing.JPanel carrinho;
    private javax.swing.JTable carrinhoTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel produtos;
    private javax.swing.JTable produtosTable;
    // End of variables declaration//GEN-END:variables
}
